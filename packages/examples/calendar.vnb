{cells:[{kind:2,language:'typescriptreact',value:'type Event = {\n  start: number;\n  end: number;\n};\n\ntype Calendar = {\n  events: Event[];\n};\n\nfunction Event({\n  event,\n  backgroundColor,\n  gridColumn\n}: {\n  event: Event;\n  backgroundColor: string;\n  gridColumn: string;\n}) {\n  return (\n    <div\n      style={{\n        backgroundColor,\n        gridColumn,\n        gridRow: `${event.start / 15 + 1} / ${event.end / 15 + 1}`,\n        border: "1px solid black",\n      }}\n    />\n  );\n}\n\nfunction Calendars({\n  calendars,\n  event,\n}: {\n  calendars: Calendar[];\n  event?: Event;\n}) {\n  return (\n    <div style={{ display: "inline-block " }}>\n      <div\n        style={{\n          display: "grid",\n          gridAutoColumns: "200px",\n          gridAutoRows: "25px",\n          gap: "5px",\n          border: "1px solid black",\n          padding: "5px",\n        }}\n      >\n        {calendars.map((calendar, col) =>\n          calendar.events.map((event) => (\n            <Event\n              event={event}\n              gridColumn={col + 1}\n              backgroundColor={`hsl(${(col + 1) * 60}, 100%, 80%)`}\n            />\n          ))\n        )}\n        {event && (\n          <Event\n            event={event}\n            backgroundColor="hsl(0, 100%, 50%, 50%)"\n            gridColumn={`1 / ${calendars.length + 1}`}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n',metadata:{id:'ccfB8AXKYooSvsZ1-Uh-S'}},{kind:2,language:'typescriptreact',value:'function findFreeTime(calendars: Calendar[], length: number) {\n  for (let start = 0; start < 24 * 60; start += 15) {\n    if (\n      calendars.every((calendar) => {\n        return !calendar.events.some(\n          (event) => event.start <= start + length -1 && start <= event.end - 1\n        );\n      })\n    )\n      return { start, end: start + length };\n  }\n  return null;\n}\n',metadata:{id:'A1Ug4_NpexobaMOmYoS35'}},{kind:2,language:'typescriptreact',value:'import { html } from "@githubnext/vitale";\nimport { renderToString } from "react-dom/server";\n\nconst calendars: Calendar[] = [\n  {\n    events: [\n      { start: 0, end: 30 },\n      { start: 60, end: 90 },\n      { start: 120, end: 150 },\n    ],\n  },\n  {\n    events: [\n      { start: 0, end: 60 },\n      { start: 120, end: 150 },\n      { start: 210, end: 240 },\n    ],\n  },\n  {\n    events: [\n      { start: 0, end: 60 },\n      { start: 120, end: 150 },\n    ],\n  },\n];\n\nconst event = findFreeTime(calendars, 60);\n\nhtml(renderToString(<Calendars calendars={calendars} event={event} />));\n',metadata:{id:'pzNOzZPZPvbAFb-Cz90-7'}}]}